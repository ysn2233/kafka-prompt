{
    "kafka-topics": {
        "options": {
            "--alter": {
                "name": "--alter",
                "description": "Alter the number of partitions, replica assignment, and/or configuration for a topic."
            },
            "--config": {
                "name": "--config",
                "description": "A topic configuration override for the topic being created or altered.",
                "completer": "kafka-configs"
            },
            "--create": {
                "name": "--create",
                "description": "Create a new topic."
            },
            "--delete": {
                "name": "--delete",
                "description": "Delete a topic."
            },
            "--delete-config": {
                "name": "--delete-config",
                "description": "A topic configuration override to be removed for an existing topic.",
                "completer": "kafka-configs"
            },
            "--describe": {
                "name": "--describe",
                "description": "List details for the given topics."
            },
            "--disable-rack-aware": {
                "name": "--disable-rack-aware",
                "description": "Disable rack aware replica assignment."
            },
            "--exclude-internal": {
                "name": "--exclude-internal",
                "description": "Exclude internal topics when running list or describe command."
            },
            "--force": {
                "name": "--force",
                "description": "Assume yes for all queries and do not prompt."
            },
            "--help": {
                "name": "--help",
                "description": "Print usage information."
            },
            "--if-exists": {
                "name": "--if-exists",
                "description": "If set when altering or deleting topics, the action will only execute if the topic exists."
            },
            "--if-not-exists": {
                "name": "--if-not-exists",
                "description": "If set when creating topics, the action will only execute if the topic does not already exist."
            },
            "--list": {
                "name": "--list",
                "description": "List all available topics."
            },
            "--partitions": {
                "name": "--partitions",
                "description": "The number of partitions for the topic being created or altered."
            },
            "--replica-assignment": {
                "name": "--replica-assignment",
                "description": "A list of manual partition-to-broker assignments for the topic being created or altered."
            },
            "--replication-factor": {
                "name": "--replication-factor",
                "description": "The replication factor for each partition in the topic being created."
            },
            "--topic": {
                "name": "--topic",
                "description": "The topic to be create, alter, describe, or delete."
            },
            "--topics-with-overrides": {
                "name": "--topics-with-overrides",
                "description": "If set when describing topics, only show topics that have overridden configs."
            },
            "--unavailable-partitions": {
                "name": "--unavailable-partitions",
                "description": "If set when describing topics, only show partitions whose leader is not available."
            },
            "--under-replicated-partitions": {
                "name": "--under-replicated-partitions",
                "description": "If set when describing topics, only show under replicated partitions."
            },
            "--zookeeper": {
                "name": "--zookeeper",
                "description": "Zookeeper connection string. WARNING: This'll overwrite the selected cluster value."
            }
        },
        "name": "kafka-topics",
        "description": "Create, delete, describe, or change a topic"
    },
    "kafka-configs": {
        "options": {
            "--add-config": {
                "name": "--add-config",
                "description": "Key-value pairs of configs to add. Format: key=value.",
                "completer": "kafka-configs"
            },
            "--alter": {
                "name": "--alter",
                "description": "Alter the configuration for the entity."
            },
            "--bootstrap-server": {
                "name": "--bootstrap-server",
                "description": "The Kafka broker(s) to connect to. NOTE: This'll overwrite the selected cluster value."
            },
            "--command-config": {
                "name": "--command-config",
                "description": "Property file containing configs to be passed to the admin client."
            },
            "--delete-config": {
                "name": "--delete-config",
                "description": "Key-value pairs of configs to remove. Format: key=value.",
                "completer": "kafka-configs"
            },
            "--describe": {
                "name": "--describe",
                "description": "List configs for the given entity."
            },
            "--entity-default": {
                "name": "--entity-default",
                "description": "Default entity name for clients, users, and brokers."
            },
            "--entity-name": {
                "name": "--entity-name",
                "description": "Name of the entity (topic name, client id, user principal name, broker id)."
            },
            "--entity-type": {
                "name": "--entity-type",
                "description": "Type of the entity (topic, client, user, broker).",
                "completer": "entity-types"
            },
            "--force": {
                "name": "--force",
                "description": "Assume yes for all queries and do not prompt."
            },
            "--help": {
                "name": "--help",
                "description": "Print usage information."
            },
            "--zookeeper": {
                "name": "--zookeeper",
                "description": "Zookeeper connection string. NOTE: This'll overwrite the selected cluster value."
            }
        },
        "name": "kafka-configs",
        "description": "Add/Remove entity config for a topic, client, user or broker"
    },
    "kafka-console-consumer": {
        "options": {
            "--bootstrap-server": {
                "name": "--bootstrap-server",
                "description": "The Kafka broker(s) to connect to. NOTE: This'll overwrite the selected cluster value."
            },
            "--consumer-property": {
                "name": "--consumer-property",
                "description": "A way to pass user-defined properties in the form key=value to the consumer."
            },
            "--consumer.config": {
                "name": "--consumer.config",
                "description": "Consumer config properties file. Note that --consumer-property takes precedence over this config."
            },
            "--enable-systest-events": {
                "name": "--enable-systest-events",
                "description": "Log lifecycle events of the consumer in addition to logging consumed messages."
            },
            "--formatter": {
                "name": "--formatter",
                "description": "The name of a class to use for formatting kafka messages for display."
            },
            "--from-beginning": {
                "name": "--from-beginning",
                "description": "Start with the earliest message present in the log rather than the latest message."
            },
            "--group": {
                "name": "--group",
                "description": "The consumer group id of the consumer."
            },
            "--isolation-level": {
                "name": "--isolation-level",
                "description": "Set to read_committed in order to filter out transactional messages which are not committed."
            },
            "--key-deserializer": {
                "name": "--key-deserializer",
                "description": "Deserializer for the key."
            },
            "--max-messages": {
                "name": "--max-messages",
                "description": "The maximum number of messages to consume before exiting. Defaults to continual consumption."
            },
            "--offset": {
                "name": "--offset",
                "description": "The offset id to consume from. A non-negative integer, 'earliest', or 'latest'."
            },
            "--partition": {
                "name": "--partition",
                "description": "The partition to consume from. Starts from the end unless --offset is set."
            },
            "--property": {
                "name": "--property",
                "description": "The properties to initialize the message formatter."
            },
            "--skip-message-on-error": {
                "name": "--skip-message-on-error",
                "description": "If there is an error when processing a message, skip it rather than halting."
            },
            "--timeout-ms": {
                "name": "--timeout-ms",
                "description": "If specified, exit if no message is available for consumption for the specified interval."
            },
            "--topic": {
                "name": "--topic",
                "description": "The topic to consume from."
            },
            "--value-deserializer": {
                "name": "--value-deserializer",
                "description": "Deserializer for the value."
            },
            "--whitelist": {
                "name": "--whitelist",
                "description": "Whitelist of topics to include for consumption."
            }
        },
        "name": "kafka-console-consumer",
        "description": "The console consumer is a tool that reads data from Kafka and outputs it to standard output"
    },
    "kafka-console-producer": {
        "options": {
            "--batch-size": {
                "name": "--batch-size",
                "description": "Number of messages to send in a single batch if they are not being sent synchronously."
            },
            "--broker-list": {
                "name": "--broker-list",
                "description": "The Kafka broker(s) to connect to. NOTE: This'll overwrite the selected cluster value."
            },
            "--compression-codec": {
                "name": "--compression-codec",
                "description": "The compression codec. Default: gzip.",
                "completer": "compression-codecs"
            },
            "--line-reader": {
                "name": "--line-reader",
                "description": "The class name of the class to use for reading lines from standard in."
            },
            "--max-block-ms": {
                "name": "--max-block-ms",
                "description": "The max time that the producer will block for during a send request."
            },
            "--max-memory-bytes": {
                "name": "--max-memory-bytes",
                "description": "The total memory used by the producer to buffer records waiting to be sent to the server."
            },
            "--max-partition-memory-bytes": {
                "name": "--max-partition-memory-bytes",
                "description": "The buffer size allocated for a partition."
            },
            "--message-send-max-retries": {
                "name": "--message-send-max-retries",
                "description": "The number of retires before the producer will give up and drop a message."
            },
            "--metadata-expiry-ms": {
                "name": "--metadata-expiry-ms",
                "description": "Number of milliseconds after which we force a refresh of metadata even if we haven't seen any leadership changes."
            },
            "--producer-property": {
                "name": "--producer-property",
                "description": "A mechanism to pass user-defined properties in the form key=value to the producer."
            },
            "--producer.config": {
                "name": "--producer.config",
                "description": "Producer config properties file. Note that --producer-property takes precedence over this config."
            },
            "--property": {
                "name": "--property",
                "description": "A mechanism to pass user-defined properties in the form key=value to the message reader."
            },
            "--request-required-acks": {
                "name": "--request-required-acks",
                "description": "The required acks of the producer request.",
                "completer": "acks"
            },
            "--request-timeout-ms": {
                "name": "--request-timeout-ms",
                "description": "The ack timeout of the producer requests. Value must be non-negative."
            },
            "--retry-backoff-ms": {
                "name": "--retry-backoff-ms",
                "description": "The amount of time the producer waits before refreshing the metadata of the topic."
            },
            "--socket-buffer-size": {
                "name": "--socket-buffer-size",
                "description": "The size of the tcp RECV size."
            },
            "--sync": {
                "name": "--sync",
                "description": "If set message send requests to the brokers are synchronously, one at a time as they arrive."
            },
            "--timeout": {
                "name": "--timeout",
                "description": "In asynchronous mode, the maximum amount of time a message will queue awaiting sufficient batch size."
            },
            "--topic": {
                "name": "--topic",
                "description": "The topic to produce messages to."
            }
        },
        "name": "kafka-console-producer",
        "description": "Read data from standard input and publish it to Kafka."
    },
    "kafka-consumer-groups": {
        "options": {
            "--all-topics": {
                "name": "--all-topics",
                "description": "Consider all topics assigned to a group in the 'reset-offsets' process."
            },
            "--bootstrap-server": {
                "name": "--bootstrap-server",
                "description": "The Kafka broker(s) to connect to. NOTE: This'll overwrite the selected cluster value."
            },
            "--by-duration": {
                "name": "--by-duration",
                "description": "Reset offsets to offset by duration from current timestamp. Format: 'PnDTnHnMnS'."
            },
            "--command-config": {
                "name": "--command-config",
                "description": "Property file containing configs to be passed to admin client and consumer."
            },
            "--delete": {
                "name": "--delete",
                "description": "Delete topic partition offsets and ownership info over the entire consumer group."
            },
            "--describe": {
                "name": "--describe",
                "description": "Describe consumer group and list offset lag for the consumer group."
            },
            "--dry-run": {
                "name": "--dry-run",
                "description": "Show results without executing changes. Supported for '--reset-offsets'."
            },
            "--execute": {
                "name": "--execute",
                "description": "Execute operation. Supported for '--reset-offsets'."
            },
            "--export": {
                "name": "--export",
                "description": "Export operation execution to a CSV file. Supported for '--reset-offsets'."
            },
            "--from-file": {
                "name": "--from-file",
                "description": "Reset offsets to values defined in CSV file."
            },
            "--group": {
                "name": "--group",
                "description": "The consumer group to act on."
            },
            "--list": {
                "name": "--list",
                "description": "List all consumer groups."
            },
            "--members": {
                "name": "--members",
                "description": "Describe members of the given consumer group."
            },
            "--offsets": {
                "name": "--offsets",
                "description": "Describe group and list all topic partitions in the group along with their offset lag."
            },
            "--reset-offsets": {
                "name": "--reset-offsets",
                "description": "Reset offsets of consumer group. Supports one group at a time."
            },
            "--shift-by": {
                "name": "--shift-by",
                "description": "Reset offsets shifting current offset by 'n' where 'n' is positive or negative."
            },
            "--state": {
                "name": "--state",
                "description": "Describe the group state."
            },
            "--timeout": {
                "name": "--timeout",
                "description": "The timeout that can be set for some use cases."
            },
            "--to-current": {
                "name": "--to-current",
                "description": "Reset offsets to current offset."
            },
            "--to-datetime": {
                "name": "--to-datetime",
                "description": "Reset offsets to offset from datetime. Format: 'YYYY-MM-DDTHH:mm:SS.sss'."
            },
            "--to-earliest": {
                "name": "--to-earliest",
                "description": "Reset offsets to earliest offset."
            },
            "--to-latest": {
                "name": "--to-latest",
                "description": "Reset offsets to latest offset."
            },
            "--to-offset": {
                "name": "--to-offset",
                "description": "Reset offsets to a specific offset."
            },
            "--topic": {
                "name": "--topic",
                "description": "The topic whose consumer group information should be acted upon."
            },
            "--verbose": {
                "name": "--verbose",
                "description": "Provide additional information, if any, when describing the group."
            }
        },
        "name": "kafka-consumer-groups",
        "description": "List all consumer groups, describe a consumer group, delete consumer group info, or reset consumer group offsets."
    },
    "kafka-acls": {
        "options": {
            "--add": {
                "name": "--add",
                "description": "Indicates you want to add ACLs."
            },
            "--allow-host": {
                "name": "--allow-host",
                "description": "Host from which principals listed in --allow-principal will have access."
            },
            "--allow-principal": {
                "name": "--allow-principal",
                "description": "Principal to allow in the principalType:name format."
            },
            "--authorizer": {
                "name": "--authorizer",
                "description": "Fully qualified class name of the authorizer."
            },
            "--authorizer-properties": {
                "name": "--authorizer-properties",
                "description": "Properties required to configure an instance of the authorizer. Format: key=value."
            },
            "--bootstrap-server": {
                "name": "--bootstrap-server",
                "description": "The Kafka broker(s) to connect to. NOTE: This'll overwrite the selected cluster value."
            },
            "--cluster": {
                "name": "--cluster",
                "description": "Add or remove cluster ACLs."
            },
            "--command-config": {
                "name": "--command-config",
                "description": "A property file containing configs to be passed to the admin client."
            },
            "--consumer": {
                "name": "--consumer",
                "description": "Convenience options to add or remove ACLs for the consumer role."
            },
            "--delegation-token": {
                "name": "--delegation-token",
                "description": "Delegation token to which ACLs should be added or removed."
            },
            "--deny-host": {
                "name": "--deny-host",
                "description": "Host from which principals listed in --deny-principal will be denied access."
            },
            "--deny-principal": {
                "name": "--deny-principal",
                "description": "Principal to deny in the principalType:name format."
            },
            "--force": {
                "name": "--force",
                "description": "Assume yes for all queries and do not prompt."
            },
            "--group": {
                "name": "--group",
                "description": "Consumer Group to which the ACLs should be added or removed."
            },
            "--help": {
                "name": "--help",
                "description": "Print usage information."
            },
            "--idempotent": {
                "name": "--idempotent",
                "description": "Enable idempotence for the producer. Used with '--producer'."
            },
            "--list": {
                "name": "--list",
                "description": "List ACLs for the specified resource."
            },
            "--operation": {
                "name": "--operation",
                "description": "Operation that is being allowed or denied."
            },
            "--principal": {
                "name": "--principal",
                "description": "List ACLs for the specified principal."
            },
            "--producer": {
                "name": "--producer",
                "description": "Convenience options to add or remove ACLs for producer role."
            },
            "--remove": {
                "name": "--remove",
                "description": "Indicates you are trying to remove ACLs."
            },
            "--resource-pattern-type": {
                "name": "--resource-pattern-type",
                "description": "The type of the resource pattern or pattern filter. Default: LITERAL.",
                "completer": "resource-pattern-types"
            },
            "--topic": {
                "name": "--topic",
                "description": "Topic for which ACLs should be added or removed."
            },
            "--transactional-id": {
                "name": "--transactional-id",
                "description": "The transactionalId to which ACLs should be added or removed."
            }
        },
        "name": "kafka-acls",
        "description": "Manage access control lists."
    },
    "kafka-preferred-replica-election": {
        "options": {
            "--admin.config": {
                "name": "--admin.config",
                "description": "Property file containing configs to be passed to the admin client."
            },
            "--bootstrap-server": {
                "name": "--bootstrap-server",
                "description": "The Kafka broker(s) to connect to."
            },
            "--help": {
                "name": "--help",
                "description": "Print usage information."
            },
            "--path-to-json-file": {
                "name": "--path-to-json-file",
                "description": "The JSON file with the list of partitions to perform preferred replica leader election on."
            },
            "--zookeeper": {
                "name": "--zookeeper",
                "description": "DEPRECATED. Zookeeper connection string."
            }
        },
        "name": "kafka-preferred-replica-election",
        "description": "Cause leadership for each partition to be transferred back to the 'preferred replica'."
    },
    "kafka-replica-verification": {
        "options": {
            "--broker-list": {
                "name": "--broker-list",
                "description": "The Kafka broker(s) to connect to. NOTE: This'll overwrite the selected cluster value."
            },
            "--fetch-size": {
                "name": "--fetch-size",
                "description": "The fetch size of each request in bytes. Default: 1048576."
            },
            "--max-wait-ms": {
                "name": "--max-wait-ms",
                "description": "The max amount of time each fetch request waits. Default: 1000."
            },
            "--report-interval-ms": {
                "name": "--report-interval-ms",
                "description": "The reporting interval. Default: 30000."
            },
            "--time": {
                "name": "--time",
                "description": "Timestamp for getting the initial offsets. Default: -1."
            },
            "--topic-white-list": {
                "name": "--topic-white-list",
                "description": "Whitelist of topics to verify replica consistency using Java regex. Default: '.*'."
            }
        },
        "name": "kafka-replica-verification",
        "description": "Validate that all replicas for a set of topics have the same data."
    },
    "kafka-reassign-partitions": {
        "options": {
            "--bootstrap-server": {
                "name": "--bootstrap-server",
                "description": "The Kafka broker(s) to connect to. NOTE: This'll overwrite the selected cluster value."
            },
            "--broker-list": {
                "name": "--broker-list",
                "description": "The list of brokers used in reassignment in the form '0,1,2'. Default: all."
            },
            "--command-config": {
                "name": "--command-config",
                "description": "Property file containing configs to be passed to the admin client."
            },
            "--disable-rack-aware": {
                "name": "--disable-rack-aware",
                "description": "Disable rack aware replica assignment."
            },
            "--execute": {
                "name": "--execute",
                "description": "Start the reassignment as specified by the '--reassignment-json-file' options."
            },
            "--generate": {
                "name": "--generate",
                "description": "Generate a candidate partition reassignment configuration. This does not execute it."
            },
            "--help": {
                "name": "--help",
                "description": "Print usage information."
            },
            "--reassignment-json-file": {
                "name": "--reassignment-json-file",
                "description": "The JSON file with the partition reassignment configuration."
            },
            "--replica-alter-logs-dirs-throttle": {
                "name": "--replica-alter-logs-dirs-throttle",
                "description": "The movement of replicas between log directories will be throttled by this value. Default: -1."
            },
            "--throttle": {
                "name": "--throttle",
                "description": "The movement of partitions between brokers will be throttled by this value. Default: -1."
            },
            "--timeout": {
                "name": "--timeout",
                "description": "The maximum time in ms allowed to wait for execution to start. Default: 10000."
            },
            "--topics-to-move-json-file": {
                "name": "--topics-to-move-json-file",
                "description": "Generate a configuration to move partitions of the specified topics to the given list of brokers."
            },
            "--verify": {
                "name": "--verify",
                "description": "Verify if the reassignment has completed."
            },
            "--zookeeper": {
                "name": "--zookeeper",
                "description": "Zookeeper connection string. WARNING: This'll overwrite the selected cluster value."
            }
        },
        "name": "kafka-reassign-partitions",
        "description": "Moves topic partitions between replicas."
    },
    "kafka-broker-api-versions": {
        "options": {
            "--bootstrap-server": {
                "name": "--bootstrap-server",
                "description": "The Kafka broker(s) to connect to. NOTE: This'll overwrite the selected cluster value."
            },
            "--command-config": {
                "name": "--command-config",
                "description": "Property file containing configs to be passed to the admin client."
            }
        },
        "name": "kafka-broker-api-versions",
        "description": "Retrieve broker version information."
    },
    "kafka-delete-records": {
        "options": {
            "--bootstrap-server": {
                "name": "--bootstrap-server",
                "description": "The Kafka broker(s) to connect to. NOTE: This'll overwrite the selected cluster value."
            },
            "--command-config": {
                "name": "--command-config",
                "description": "Property file containing configs to be passed to the admin client."
            },
            "--offset-json-file": {
                "name": "--offset-json-file",
                "description": "The JSON file with offset per partition."
            }
        },
        "name": "kafka-delete-records",
        "description": "Delete records of the given partitions by offset."
    },
    "kafka-log-dirs": {
        "options": {
            "--bootstrap-server": {
                "name": "--bootstrap-server",
                "description": "The Kafka broker(s) to connect to. NOTE: This'll overwrite the selected cluster value."
            },
            "--broker-list": {
                "name": "--broker-list",
                "description": "The list of brokers to be queried in the form '0,1,2'. Default: all."
            },
            "--command-config": {
                "name": "--command-config",
                "description": "Property file containing configs to be passed to the admin client."
            },
            "--describe": {
                "name": "--describe",
                "description": "Describe the specified log directories on the specified brokers."
            },
            "--topic-list": {
                "name": "--topic-list",
                "description": "The list of topics to be queried in the form 'topic1,topic2,topic3'. Default: all."
            }
        },
        "name": "kafka-log-dirs",
        "description": "Find log directory usage on specified brokers."
    },
    "kafka-dump-log": {
        "options": {
            "--deep-iteration": {
                "name": "--deep-iteration",
                "description": "Use deep instead of shallow iteration. Automatically set when using '--print-data-log'."
            },
            "--files": {
                "name": "--files",
                "description": "Comma-separated list of data and index log files to be dumped."
            },
            "--help": {
                "name": "--help",
                "description": "Print usage information."
            },
            "--index-sanity-check": {
                "name": "--index-sanity-check",
                "description": "Check the index sanity without printing its content."
            },
            "--key-decoder-class": {
                "name": "--key-decoder-class",
                "description": "Used to deserialize the keys. Default: kafka.serializer.StringDecoder."
            },
            "--max-message-size": {
                "name": "--max-message-size",
                "description": "Size of largest message. Default: 5242880."
            },
            "--offsets-decoder": {
                "name": "--offsets-decoder",
                "description": "Parse log data as offset data from the __consumer_offsets topic."
            },
            "--print-data-log": {
                "name": "--print-data-log",
                "description": "Print the messages content when dumping data log. Automatically set when using any decoder options."
            },
            "--transaction-log-decoder": {
                "name": "--transaction-log-decoder",
                "description": "Parse log data as transaction metadata from the __transaction_state topic."
            },
            "--value-decoder-class": {
                "name": "--value-decoder-class",
                "description": "Used to deserialize the messages. Default: kafka.serializer.StringDecoder."
            },
            "--verify-index-only": {
                "name": "--verify-index-only",
                "description": "Verify the index log without printing its content."
            }
        },
        "name": "kafka-dump-log",
        "description": "Parse a log file and dump its contents to the console."
    },
    "zookeeper-shell": {
        "options": {},
        "name": "zookeeper-shell",
        "description": "Access zookeeper shell."
    }
}
